best program worst sets different specs case run several algorithm data includes also computer random try cases
answered
logarthmic linear 1 n big exponential using log k time polynomial gt 2 complexity quadratic
operations sort counting principle using algorithm number performed
actually measure means prototype given certain would run algorithm parameters write time experimental takes
different relationship measuring input algorithm sizes running
all oposite recommended limited possibilities process first determine test include run algorithm assessment runtime data used code theoretical hardware
answered
approach equation measuring big tells using time running experimental
average times measuring multiple run algorithm amount create time results takes
operations value called keep many add time function takes
oh big
program various measuring input data time running system
makes measure different x speeds testing important running experimental however patterns increase program attempt eyes keep find theoretical hardware inferior run sizes data time 10 completion software like
program see times thing called run many runtime function based
times specific called get segments unit number work per
equation n call memory every type add multiply
speed adding calculate efficiency called computers immediately marker algorithm another time cpu change
h big notation
approach measures seconds actual time running experimental
specific algorithm data running set
operations required complete expressed big algorithm terms time number running measured experimental usually function notation
average example times constant 1 get n f run 3n lowest number time running code values x bef drop
operations program calculate measure run input actual using time running done
