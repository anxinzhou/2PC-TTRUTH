log n number nodes
log n steps
levels number height tree
height tree
criteria search elements given 2 n steps
log n
location smaller right one node left current larger step looking root else depends go
binary levels 2 tree n
function node n number 1 steps
n 2 elements given
log n
log n
log n
constructed search case items one time full worse binary scenario best list instance log way n number root last traversal progressing children linear efficiently right tree 1 poorly linked downwards
nodes n number
anywhere depending ordered tree log way n steps
log n
step case scenario worst levels node tree number 1 ie farthest root position
cases 3 steps
total nodes equals tree log n number
levels tree number steps generations
binary search levels takes node tree number steps
right node subtree visiting visit left three steps root
log n
