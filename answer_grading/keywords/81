scans list selects smallest largest element places front increment curptr one scan list next smallest largest element place respect sorted elements
selection sort searches array lowest value swaps first value array searches next lowest value swaps second item array
compare largest element front element swap data according value needed
selection sort sorting algorithm divides list half two lists compares first elements both lists puts elements another list smaller element bigger one
iterate list assume list integers find smallest one put separate sorted list traverse find next smallest move sorted section repeat run elements sort
selection sort selects smallest element list second smallest sorts acordingly
select smallest element place left select smallest element sort respect item already left continue till end collection items
selection sort scrolls data structure looking lowest highest unsorted piece data moves held spot increments spot one starts process
selection sort works finding smallest element compares largest sorts elements
selection sort usually recursive sorting method divide elements sorted half repeatedly sort smallest case work way sorting all sorted
goes middle list checks see greater less value given moves list accordingly add value proper place
selection sort finds lowest element data set places behind pivot point
selection sort iterates array one element time seeking least value right replacing current value
selection sort traverses unsorted array looking smallest value found put beginning unsorted array performed several times output sorted array
runs list finds smallest largest value puts appropriate position
pick number set all values less number left all numbers right number larger
takes largest item unsorted array swaps last item unsorted array
selecting first object comparing next objects find one smaller switches two comes back way sees objects previous last one greater switches decreasing range looks finishes middle
selection sorts works going certain list goes unsorted list selecting largest item list placing sorted array two arrays unsorted sorted complete steps list sorted
selection sort works pulling all values side leaving one value list insert value list value bigger go right smaller go left
selection sort searches smallest element remaining data organization places largest point new data organization
selection sort sorts array one element time first finds element smallest key puts first location within array list finds next smallest puts second location
select element compare 2nd element greater swap
selects smallest element list switches element correct position selects next smallest
