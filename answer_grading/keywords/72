simplest splits upon problem simplier calls case self time form base function reaches solve
opperation factorial calls perform recursive function
answered
terminates upon problem calls case base becomes smaller
times runs calls multiple case reached base function
calls case base function reaches untill
start must eventually converge otherwise get calls case loop infinite time base function smaller
met calls case base function
diminished problem call calls function
certain calls task perform function
correct causes called usually calls case loop infinite base recursive function
problem calls order function solve
calls case form base finds simplest function solution
repeatedly break achieved fundamental problem similar calls case idea base problems series recursive function large one smaller
returns problem simplifies case recursively calling base recursive function typically solution arriving
answer solve case original recursive function definite smaller back calls reached point base longer large recurses two determine breaks problem terminating called unwinds problems
calls loop case exit base function
met calls base function cases
knows directly indirectly calls case reached base recursive function solve cases
stop case calls base recursion function uses
close get calls case base eaach closer function
eventually conquers problem divides case reached calls satisfied base function
code definition function calls
parts successively solutions repeatedly solves much simpler case recursive function smaller returned initial step piece reached base broken problem calling time
