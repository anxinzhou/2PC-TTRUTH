element together recursively list sorted conquer technique back compares reversing done divide merging uses
sort together items memory order locations works merging merge removing
halves two together divides sorts merges half array
break two length sorted merges 1 divide
sort times element algorithms best idea divides one quicksort sorted conquer sorting back half multiple array divide joins merge uses
get value line sorted half values single
halves sort together split organized put continually half array side
step sort smaller moves elements arrays reach 2 size merges splits 1 array next merge
divide conquer
arrays elements reconstruct back individual array many single
sort keeps algorithm elements breaks 2 merges sorting back half array merge continues
brings sort halves two problem together divides organizes half merge
simpler answers two problems split correct order array
sort element recursive divides one sorts remains cells way half array recursively call data merging merge
initial sort element two arrays divides version sorted merges point final 1 larger array recursively returned merge
continuously sort together arrays sorts breaks one sorted half array merge
halves two together sorts giving iteration takes sorted third list full compares half splits recursion array rejoined
together arrays source size merges small back splits 1 completely array recurs large
halves smaller combines divides one sorted array
level sort together comparing sets order return halves sorts back whole two broken merges values array merging parts breaks sorted merge
two together arrays separate divides sorts recursively merges back data
initial sort two smaller arrays temporary split back array single
halves sort element together according placement divides one reached rest merges comparison data merge
sort together parts strategy conquer sorted sorting back array divide merging merge uses
